mixin imageUpload(fieldName, label, previewId, responseInputId, imageUrl)
  .row
    .col-md-8
      .mb-3
        label.form-label(for=fieldName) #{label}:
        .input-group
          input.form-control(type="file" id=fieldName name=fieldName accept="image/*" onchange=`handleFileSelect('${fieldName}', '${previewId}')`)
          button.btn.btn-outline-secondary(type="button"  id=`uploadButton_${fieldName}` onclick=`uploadImage('${fieldName}', '${previewId}', '${responseInputId}')` disabled) Subir
          button.btn.btn-outline-danger.mr-3(type="button" onclick=`cancelImage('${previewId}', '${fieldName}')`) Cancelar
      
      input(type="hidden" id=responseInputId name=responseInputId value=imageUrl)
    
    .col-md-4.d-flex-column.align-items-end.justify-content-center
      img.img-fluid(id=previewId src=imageUrl alt="Vista previa" style="max-height: 200px; width: auto;")
      span(id=`${fieldName}UploadSuccess` class="text-success" style="display: none; margin-left: 1rem;") Imagen subida exitosamente!


  script.
    function handleFileSelect(fieldName, previewId) {
      const input = document.getElementById(fieldName);
      const previewImage = document.getElementById(previewId);
      const file = input.files[0];

      if (file) {
        document.getElementById(`uploadButton_${fieldName}`).disabled = false;
        const reader = new FileReader();

        reader.onload = (e) => {
          previewImage.src = e.target.result;
        };

        reader.readAsDataURL(file);
      }
    }

    function cancelImage(previewId, fieldName) {
      const previewImage = document.getElementById(previewId);
      const fileInput = document.getElementById(fieldName);
      fileInput.value = '';
      previewImage.src = '';
    }

    async function uploadImage(fieldName, previewId, responseInputId) {
      const fileInput = document.getElementById(fieldName);
      const file = fileInput.files[0]; // Obtener el archivo seleccionado

        // Validar si hay un archivo antes de continuar
        if (!file) {
          alert('Por favor, selecciona un archivo antes de subir.');
           return;
              }
      const formData = new FormData();
      formData.append('image', fileInput.files[0]);

      const token = localStorage.getItem('token'); 

      try {
        const response = await fetch('/api/v3/upload', {
          method: 'POST',
          body: formData,
          headers: {
            'Authorization': `Bearer ${token}`, 
          },
        });

        const result = await response.json();
        if (result.success) {
          document.getElementById(responseInputId).value = result.data.url;
          document.getElementById(previewId).src = result.data.url;
          document.getElementById(`${fieldName}UploadSuccess`).style.display = 'block';
          const modalHtml1 = `
            <div class="modalContainer" id="temporaryModal">
            <div class="modalSuccess">
            <h4>Imagen subida exitosamente!</h4>
            </div>
            </div>
              `;
  
              // Insertar el modal en el DOM
            document.body.insertAdjacentHTML('beforeEnd', modalHtml1);
                setTimeout(() => {
             const temporaryModal = document.getElementById('temporaryModal');
             if (temporaryModal) {
                 temporaryModal.remove();
              }
              }, 2000);
          
        
        } else {
            document.getElementById(`${fieldName}UploadSuccess`).style.display = 'none';
            const modalHtml2 = `
              <div class="modalContainer" id="temporaryModal2">
              <div class="modalFailed">
              <h4>Error al subir la imagen.!</h4>
              </div>
              </div>
                 `;
                  // Insertar el modal en el DOM
            document.body.insertAdjacentHTML('beforeEnd', modalHtml2);
              setTimeout(() => {
              const temporaryModal = document.getElementById('temporaryModal2');
              if (temporaryModal) {
                  temporaryModal.remove();
                }
              }, 2000);
          
        }
      } catch (error) {
        console.error('Error en la subida:', error.message)
      }
      }
