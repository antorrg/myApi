mixin imageUpload(fieldName, label, previewId, responseInputId, imageUrl)
  .row
    .col-md-8
      .mb-3
        label.form-label(for=fieldName) #{label}:
        .input-group
          input.form-control(type="file" id=fieldName name=fieldName accept="image/*" onchange=`handleFileSelect('${fieldName}', '${previewId}')`)
          button.btn.btn-outline-secondary(type="button" onclick=`uploadImage('${fieldName}', '${previewId}', '${responseInputId}')`) Subir
          button.btn.btn-outline-danger(type="button" onclick=`cancelImage('${previewId}', '${fieldName}')`) Cancelar
      
      input(type="hidden" id=responseInputId name=responseInputId value=imageUrl)
    
    .col-md-4.d-flex.align-items-center.justify-content-center
      img.img-fluid(id=previewId src=imageUrl alt="Vista previa" style="max-height: 200px; width: auto;")

  script.
    function handleFileSelect(fieldName, previewId) {
      const input = document.getElementById(fieldName);
      const previewImage = document.getElementById(previewId);
      const file = input.files[0];

      if (file) {
        const reader = new FileReader();

        reader.onload = (e) => {
          previewImage.src = e.target.result;
        };

        reader.readAsDataURL(file);
      }
    }

    function cancelImage(previewId, fieldName) {
      const previewImage = document.getElementById(previewId);
      const fileInput = document.getElementById(fieldName);
      fileInput.value = '';
      previewImage.src = '';
    }

    async function uploadImage(fieldName, previewId, responseInputId) {
      const fileInput = document.getElementById(fieldName);
      const formData = new FormData();
      formData.append('image', fileInput.files[0]);

      const token = localStorage.getItem('token'); 

      try {
        const response = await fetch('/api/v3/upload', {
          method: 'POST',
          body: formData,
          headers: {
            'Authorization': `Bearer ${token}`, 
          },
        });

        const result = await response.json();
        if (result.success) {
          document.getElementById(responseInputId).value = result.data.url;
          document.getElementById(previewId).src = result.data.url;
          const modalHtml1 = `
            <div class="modalContainer" id="temporaryModal">
            <div class="modalSuccess">
            <h4>Imagen subida exitosamente!</h4>
            </div>
            </div>
              `;
  
              // Insertar el modal en el DOM
            document.body.insertAdjacentHTML('beforeEnd', modalHtml1);
                setTimeout(() => {
             const temporaryModal = document.getElementById('temporaryModal');
             if (temporaryModal) {
                 temporaryModal.remove();
              }
              }, 2000);
          
        
        } else {
            const modalHtml2 = `
              <div class="modalContainer" id="temporaryModal2">
              <div class="modalFailed">
              <h4>Error al subir la imagen.!</h4>
              </div>
              </div>
                 `;
                  // Insertar el modal en el DOM
            document.body.insertAdjacentHTML('beforeEnd', modalHtml2);
              setTimeout(() => {
              const temporaryModal = document.getElementById('temporaryModal2');
              if (temporaryModal) {
                  temporaryModal.remove();
                }
              }, 2000);
          
        }
      } catch (error) {
        console.error('Error en la subida:', error.message)
      }
      }

//- mixin imageUpload(fieldName, label, previewId, responseInputId, imageUrl)
//-   .col-md-6.mb-3
//-     label.form-label(for=fieldName) #{label}:
//-     .input-group
//-       input.form-control(type="file" id=fieldName name=fieldName accept="image/*" onchange="handleFileSelect(this)")
//-       button.btn.btn-outline-secondary(type="button" onclick=`uploadImage('${fieldName}', '${previewId}', '${responseInputId}')`) Subir
//-       button.btn.btn-outline-danger(type="button" onclick=`cancelImage('${previewId}', '${fieldName}')`) Cancelar
  
//-   .col-md-6.mb-3
//-     img.img.w-25.h-auto(id=previewId,  alt="Vista previa")
  
//-   input(type="hidden" id=responseInputId name=responseInputId)

//-   script.
//-     async function handleFileSelect(input) {
//-       const previewImage = document.getElementById(input.id.replace('Input', 'Preview'));
//-       const file = input.files[0];
//-       //let showImg =  null;
//-       const reader = new FileReader();

//-       reader.onload = () => {
//-         previewImage.src = reader.result;
      
//-       };

//-       if (file) {
//-        await reader.readAsDataURL(file);
       
//-       }
//-     }

//-     function cancelImage(previewId, fieldName) {
//-       const previewImage = document.getElementById(previewId);
//-       const fileInput = document.getElementById(fieldName);
//-       fileInput.value = '';
//-       previewImage.src = '';
//-       //showImg = ''
//-     }

//-     async function uploadImage(fieldName, previewId, responseInputId) {
//-       const fileInput = document.getElementById(fieldName);
//-       const formData = new FormData();
//-       formData.append('image', fileInput.files[0]);

//-       const token = localStorage.getItem('token'); 

//-       try {
//-         const response = await fetch('/api/v3/upload', {
//-           method: 'POST',
//-           body: formData,
//-           headers: {
//-             'Authorization': `Bearer ${token}`, 
//-           },
//-         });

//-         const result = await response.json();
      
//-         if (result.ok) {
//-           document.getElementById(responseInputId).value = result.url;
//-           showImg= result.url
//-           alert('Imagen subida exitosamente.');
//-         } else {
//-           alert('Error al subir la imagen.');
//-         }
//-       } catch (error) {
//-         console.error('Error en la subida:', error.message)
//-       }
//-    }

//- mixin imageUpload(fieldName, label, previewId, responseInputId, imageUrl)
//-   .col-md-6.mb-3
//-     label.form-label(for=fieldName) #{label}:
//-     .input-group
//-       input.form-control(type="file" id=fieldName name=fieldName accept="image/*" onchange="handleFileSelect(this)")
//-       button.btn.btn-outline-secondary(type="button" onclick=`uploadImage('${fieldName}', '${previewId}', '${responseInputId}')`) Subir
//-       button.btn.btn-outline-danger(type="button" onclick=`cancelImage('${previewId}')`) Cancelar
  
//-   .col-md-6.mb-3
//-     img.img.w-25.h-auto(id=previewId, src= imageUrl? imageUrl : fieldName, alt="Vista previa")
  
//-   input(type="hidden" id=responseInputId name=responseInputId)

//-   script.
//-     async function handleFileSelect(input) {
//-       const previewImage = document.getElementById(input.id.replace('Input', 'Preview'));
//-       console.log('previewImage: ', previewImage)
//-       const file = input.files[0];
//-       const reader = new FileReader();

//-       reader.onload = () => {
//-         previewImage.src = reader.result;
//-       };

//-       if (file) {
//-         await reader.readAsDataURL(file);
  
//-       }
//-     }

//-     function cancelImage(previewId) {
//-       const previewImage = document.getElementById(previewId);
//-       const fileInput = document.getElementById(previewId.replace('Preview', ''));
//-       fileInput.value = '';
//-       previewImage.src = 'Not found';
//-     }

//-     async function uploadImage(fieldName, previewId, responseInputId) {
//-       const fileInput = document.getElementById(fieldName);
//-       const formData = new FormData();
//-       const imgName = 'image'
//-       formData.append(imgName, fileInput.files[0]);
//-          // Consologuear el contenido de FormData
//-         for (const [key, value] of formData.entries()) {
//-           console.log(`${key}:`, value);
//-           }

//-       const token = localStorage.getItem('token'); 

//-       try {
//-         const response = await fetch('/api/v3/upload', {
//-           method: 'POST',
//-           body: formData,
//-           headers: {
//-            'Authorization': `Bearer ${token}`, 
//-           },
//-         });

//-         const result = await response.json();
       
      
//-         if (result.ok) {
//-           document.getElementById(responseInputId).value = result;
//-           alert('Imagen subida exitosamente.');
//-         } else {
         
//-           alert('Error al subir la imagen.');
//-         }
//-       } catch (error) {
//-         console.error('Error en la subida:', error.message)
//-       }
//-    }